<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PATCH /api/banks" tests="2" skipped="0" failures="0" errors="0" timestamp="2021-07-28T10:32:59" hostname="M1ss-MacBook-Pro.local" time="0.194">
  <properties/>
  <testcase name="should return BAD REQUEST if no bank with given account number exists()" classname="com.kwchaiwat.dev.springbootkotlin.controller.BankControllerTest$PatchExistingBank" time="0.056"/>
  <testcase name="should update an existing bank()" classname="com.kwchaiwat.dev.springbootkotlin.controller.BankControllerTest$PatchExistingBank" time="0.138"/>
  <system-out><![CDATA[2021-07-28 17:32:59.332  INFO 84685 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.kwchaiwat.dev.springbootkotlin.controller.BankControllerTest$PatchExistingBank], using SpringBootContextLoader
2021-07-28 17:32:59.337  INFO 84685 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.kwchaiwat.dev.springbootkotlin.controller.BankControllerTest$PatchExistingBank]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-07-28 17:32:59.339  INFO 84685 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.kwchaiwat.dev.springbootkotlin.controller.BankControllerTest$PatchExistingBank]: PatchExistingBank does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-07-28 17:32:59.353  INFO 84685 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.kwchaiwat.dev.springbootkotlin.SpringboardsApplication for test class com.kwchaiwat.dev.springbootkotlin.controller.BankControllerTest$PatchExistingBank
2021-07-28 17:32:59.356  INFO 84685 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2021-07-28 17:32:59.358  INFO 84685 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7ba2dfe7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2c724324, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@52e8ade7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@e5fe9ba, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@63ef5271, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5d3a464b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4a2a5f9e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3bc96d58, org.springframework.test.context.event.EventPublishingTestExecutionListener@222ccc8a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2dabce9a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@35e5b21e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4536aa57, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1ba66e7, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7216a754, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6afb9e4a]
Hibernate: select bank0_.id as id1_0_, bank0_.account_number as account_2_0_, bank0_.transaction_fee as transact3_0_, bank0_.trust as trust4_0_ from banks bank0_

MockHttpServletRequest:
      HTTP Method = PATCH
      Request URI = /api/banks
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"75"]
             Body = {"id":null,"accountNumber":"does_not_exist","trust":1.0,"transactionFee":1}
    Session Attrs = {}

Handler:
             Type = com.kwchaiwat.dev.springbootkotlin.controller.bank.BankController
           Method = com.kwchaiwat.dev.springbootkotlin.controller.bank.BankController#updateBank(Bank)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = java.util.NoSuchElementException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"text/plain;charset=UTF-8", Content-Length:"56"]
     Content type = text/plain;charset=UTF-8
             Body = Could not find a bank with account number does_not_exist
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select bank0_.id as id1_0_, bank0_.account_number as account_2_0_, bank0_.transaction_fee as transact3_0_, bank0_.trust as trust4_0_ from banks bank0_
Hibernate: delete from banks where id=?
Hibernate: insert into banks (account_number, transaction_fee, trust) values (?, ?, ?)

MockHttpServletRequest:
      HTTP Method = PATCH
      Request URI = /api/banks
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"74"]
             Body = {"id":null,"accountNumber":"AC-91923","trust":9999.99,"transactionFee":99}
    Session Attrs = {}

Handler:
             Type = com.kwchaiwat.dev.springbootkotlin.controller.bank.BankController
           Method = com.kwchaiwat.dev.springbootkotlin.controller.bank.BankController#updateBank(Bank)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"id":24,"accountNumber":"AC-91923","trust":9999.99,"transactionFee":99}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select bank0_.id as id1_0_, bank0_.account_number as account_2_0_, bank0_.transaction_fee as transact3_0_, bank0_.trust as trust4_0_ from banks bank0_ where bank0_.account_number=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
