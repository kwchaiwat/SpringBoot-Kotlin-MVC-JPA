<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="POST /api/banks" tests="2" skipped="0" failures="0" errors="0" timestamp="2021-07-28T10:32:59" hostname="M1ss-MacBook-Pro.local" time="0.237">
  <properties/>
  <testcase name="should return BAD REQUEST if bank with given account number already exists()" classname="com.kwchaiwat.dev.springbootkotlin.controller.BankControllerTest$PostNewBank" time="0.093"/>
  <testcase name="should add the new bank()" classname="com.kwchaiwat.dev.springbootkotlin.controller.BankControllerTest$PostNewBank" time="0.143"/>
  <system-out><![CDATA[2021-07-28 17:32:59.025  INFO 84685 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.kwchaiwat.dev.springbootkotlin.controller.BankControllerTest$PostNewBank], using SpringBootContextLoader
2021-07-28 17:32:59.036  INFO 84685 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.kwchaiwat.dev.springbootkotlin.controller.BankControllerTest$PostNewBank]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-07-28 17:32:59.038  INFO 84685 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.kwchaiwat.dev.springbootkotlin.controller.BankControllerTest$PostNewBank]: PostNewBank does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-07-28 17:32:59.051  INFO 84685 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.kwchaiwat.dev.springbootkotlin.SpringboardsApplication for test class com.kwchaiwat.dev.springbootkotlin.controller.BankControllerTest$PostNewBank
2021-07-28 17:32:59.058  INFO 84685 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2021-07-28 17:32:59.059  INFO 84685 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4c74dfd7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5a81ce4f, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@9bae765, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@674a97b4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@d2a76ed, org.springframework.test.context.support.DirtiesContextTestExecutionListener@590d22b1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d2673a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3416a743, org.springframework.test.context.event.EventPublishingTestExecutionListener@6a552232, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5a7d8d63, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4e02caa1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4faf509d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@ca8bfe8, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@3a882d8b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6287afb9]
Hibernate: select bank0_.id as id1_0_, bank0_.account_number as account_2_0_, bank0_.transaction_fee as transact3_0_, bank0_.trust as trust4_0_ from banks bank0_

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/banks
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"74"]
             Body = {"id":null,"accountNumber":"AA-12311","trust":1922.33,"transactionFee":30}
    Session Attrs = {}

Handler:
             Type = com.kwchaiwat.dev.springbootkotlin.controller.bank.BankController
           Method = com.kwchaiwat.dev.springbootkotlin.controller.bank.BankController#addBank(Bank)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = java.lang.IllegalArgumentException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"text/plain;charset=UTF-8", Content-Length:"48"]
     Content type = text/plain;charset=UTF-8
             Body = Bank with account number AA-12311 already exits.
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select bank0_.id as id1_0_, bank0_.account_number as account_2_0_, bank0_.transaction_fee as transact3_0_, bank0_.trust as trust4_0_ from banks bank0_
Hibernate: insert into banks (account_number, transaction_fee, trust) values (?, ?, ?)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/banks
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"69"]
             Body = {"id":null,"accountNumber":"abc123","trust":31.41,"transactionFee":2}
    Session Attrs = {}

Handler:
             Type = com.kwchaiwat.dev.springbootkotlin.controller.bank.BankController
           Method = com.kwchaiwat.dev.springbootkotlin.controller.bank.BankController#addBank(Bank)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"id":23,"accountNumber":"abc123","trust":31.41,"transactionFee":2}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select bank0_.id as id1_0_, bank0_.account_number as account_2_0_, bank0_.transaction_fee as transact3_0_, bank0_.trust as trust4_0_ from banks bank0_ where bank0_.account_number=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
